# –ó–∞–¥–∞—á–∞ 22:
# –î–∞–Ω—ã –¥–≤–∞ –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã—Ö –Ω–∞–±–æ—Ä–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª (–º–æ–∂–µ—Ç –±—ã—Ç—å, —Å
# –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è–º–∏). –í—ã–¥–∞—Ç—å –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–∏ÃÜ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –≤—Å–µ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ
# –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ –æ–±–æ–∏—Ö –Ω–∞–±–æ—Ä–∞—Ö.
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç 2 —á–∏—Å–ª–∞. n - –∫–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–≤–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞. m - –∫–æ–ª-–≤–æ
# —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Ç–æ—Ä–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞. –ó–∞—Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å–∞–º–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –º–Ω–æ–∂–µ—Å—Ç–≤.


from random import randint

# arrayUserFirst = []
# arrayUserSecond = []
# userFirst = int(input("Input number for firstUser: "))
# userSecond = int(input("Input number for secondUser: "))

def createArray(num, forArray):
    for i in range(num):
        forArray.append(randint(1,num)) 
        

# def printArray(userArray):
#     if userArray == arrayUserFirst:
#         print(f"Array for userFirst: {userArray}")
#     else:
#         print(f"Array for userSecond: {userArray}")

# def jointSet(firstArray, secondArray):
#     joint = set(firstArray)
#     print(joint.intersection(secondArray))
    

# createArray(userFirst, arrayUserFirst)
# createArray(userSecond, arrayUserSecond)
# printArray(arrayUserFirst)
# printArray(arrayUserSecond)
# jointSet(arrayUserFirst,arrayUserSecond)


# –ó–∞–¥–∞—á–∞ 24: –í —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–º —Ö–æ–∑—è–∏ÃÜ—Å—Ç–≤–µ –≤ –ö–∞—Ä–µ–ª–∏–∏ –≤—ã—Ä–∞—â–∏–≤–∞—é—Ç —á–µ—Ä–Ω–∏–∫—É.
# –û–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –Ω–∞ –∫—Ä—É–≥–ª–æ–∏ÃÜ –≥—Ä—è–¥–∫–µ, –ø—Ä–∏—á–µ–º –∫—É—Å—Ç—ã –≤—ã—Å–∞–∂–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏.
# –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —É –∫–∞–∂–¥–æ–≥–æ –∫—É—Å—Ç–∞ –µ—Å—Ç—å —Ä–æ–≤–Ω–æ –¥–≤–∞ —Å–æ—Å–µ–¥–Ω–∏—Ö. –í—Å–µ–≥–æ –Ω–∞ –≥—Ä—è–¥–∫–µ —Ä–∞—Å—Ç–µ—Ç N –∫—É—Å—Ç–æ–≤.
# –≠—Ç–∏ –∫—É—Å—Ç—ã –æ–±–ª–∞–¥–∞—é—Ç —Ä–∞–∑–Ω–æ–∏ÃÜ —É—Ä–æ–∂–∞–∏ÃÜ–Ω–æ—Å—Ç—å—é, –ø–æ—ç—Ç–æ–º—É –∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–±–æ—Ä–∞ –Ω–∞ –Ω–∏—Ö
# –≤—ã—Ä–æ—Å–ª–æ —Ä–∞–∑–ª–∏—á–Ω–æ–µ —á–∏—Å–ª–æ —è–≥–æ–¥ ‚Äì –Ω–∞ i-–æ–º –∫—É—Å—Ç–µ –≤—ã—Ä–æ—Å–ª–æ a —è–≥–æ–¥.
# –í —ç—Ç–æ–º —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–º —Ö–æ–∑—è–∏ÃÜ—Å—Ç–≤–µ –≤–Ω–µ–¥—Ä–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞ —á–µ—Ä–Ω–∏–∫–∏.
# –≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –º–æ–¥—É–ª—è –∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–±–∏—Ä–∞—é—â–∏—Ö –º–æ–¥—É–ª–µ–∏ÃÜ.
# –°–æ–±–∏—Ä–∞—é—â–∏–∏ÃÜ –º–æ–¥—É–ª—å –∑–∞ –æ–¥–∏–Ω –∑–∞—Ö–æ–¥, –Ω–∞—Ö–æ–¥—è—Å—å –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º
# –∫—É—Å—Ç–æ–º, —Å–æ–±–∏—Ä–∞–µ—Ç —è–≥–æ–¥—ã —Å —ç—Ç–æ–≥–æ –∫—É—Å—Ç–∞ –∏ —Å –¥–≤—É—Ö —Å–æ—Å–µ–¥–Ω–∏—Ö —Å –Ω–∏–º.
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ —è–≥–æ–¥, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç
# —Å–æ–±—Ä–∞—Ç—å –∑–∞ –æ–¥–∏–Ω –∑–∞—Ö–æ–¥ —Å–æ–±–∏—Ä–∞—é—â–∏–∏ÃÜ –º–æ–¥—É–ª—å, –Ω–∞—Ö–æ–¥—è—Å—å –ø–µ—Ä–µ–¥ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –∫—É—Å—Ç–æ–º
# –∑–∞–¥–∞–Ω–Ω–æ–∏ÃÜ –≤–æ –≤—Ö–æ–¥–Ω–æ–º —Ñ–∞–∏ÃÜ–ª–µ –≥—Ä—è–¥–∫–∏.

berryArray = []
inputBush = int(input("Input bush number: "))

createArray(inputBush, berryArray)
print(berryArray)

numberBush = int(input(f"Input number bush not more count bushes: "))
allBerryWithBush = 0

def countStrawberryBush(numBush):
    bushIndex = numBush - 1
    lenghArray = len(berryArray)
    leftBush = berryArray[bushIndex - 1]
    if leftBush < 0:
        leftBush = berryArray[lenghArray - 1]
    middleBush = berryArray[bushIndex]
    if numBush == lenghArray:
        rightBush = berryArray[0]
    else:
        rightBush = berryArray[bushIndex + 1]
    allBerryWithBush = leftBush + middleBush + rightBush
    print(f"---Right bush {rightBush} ü´ê \n-----Input bush {middleBush} ü´ê\n---Left bush {leftBush} ü´ê")
    print(f"Number of berries ü´ê  on three üå≥üå≥üå≥ bushes: {allBerryWithBush}")
    

countStrawberryBush(numberBush)